---
- name: Create AWS VPC
  hosts: localhost
  gather_facts: no
  vars_files:
    - vars.yml
  tasks:
    - name: Create VPC
      ec2_vpc:
        state: present
        region: "{{ aws_region }}"
        cidr_block: "{{ vpc_cidr }}"
        resource_tags:
          Name: "{{ vpc_name }}"
      register: vpc

    - name: Create Subnets
      ec2_vpc_subnet:
        state: present
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ item.az }}"
        resource_tags:
          Name: "Subnet-{{ item.az }}"
        assign_public_ip: yes  # This enables public IP assignment for the subnet
        map_public: yes        # This enables DNS support for the subnet
      loop: "{{ subnets }}"
      register: subnets_result
      
    - name: Create Route
      ec2_vpc_route:
        state: present
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc.vpc.id }}"
        route_table_id: "{{ item.route_table.id }}"
        dest: "0.0.0.0/0"
        gateway_id: "local"
      loop: "{{ vpc.vpc.route_tables }}"
      loop_control:
        label: "{{ item.tags.Name }}"
      when: item.tags.Name == 'Main Route Table'

    - name: Extract Subnet IDs
      set_fact:
        subnet_ids: "{{ subnet_ids | default([]) + [item.subnet.id] }}"
      loop: "{{ subnets_result.results }}"

    - name: Get Role ARNs
      ec2_instance_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "fsx-Installer-Role"
      register: role_info

    - name: Get Support Role ARNs
      ec2_instance_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "fsx-Support-Role"
      register: support_role_info

    - name: Get Control Plane Role ARNs
      ec2_instance_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "fsx-ControlPlane-Role"
      register: controlplane_role_info

    - name: Get Worker Role ARNs
      ec2_instance_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "fsx-Worker-Role"
      register: worker_role_info

    - name: Get OIDC Configurations
      ec2_vpc_aws_auth_info:
        region: "{{ aws_region }}"
      register: oidc_config

     - name: Create Rosa Cluster Command
      ansible.builtin.template:
        src: rosa_create_cluster.j2
        dest: ./rosa_create_cluster.sh
        mode: '0755'

    - name: Run ROSA Cluster Creation Script
      ansible.builtin.command: ./rosa_create_cluster.sh

    - debug:
        var: vpc
